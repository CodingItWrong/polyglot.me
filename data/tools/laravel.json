{
	"id": "laravel",
	"name": "Laravel",
	"api": "http://laravel.com/docs",
	"featuresets": {
		"collections": {
			"get": {
				"code": "$collection->get($mykey)",
				"api": "http://laravel.com/api/4.1/Illuminate/Support/Collection.html#method_get"
			},
			"set": {
				"code": "$collection->put($mykey,$myvalue)",
				"api": "http://laravel.com/api/4.1/Illuminate/Support/Collection.html#method_put"
			},
			"push": {
				"code": "$collection->push($myvalue)",
				"api": "http://laravel.com/api/4.1/Illuminate/Support/Collection.html#method_push"
			},
			"pop": {
				"code": "$collection->pop()",
				"api": "http://laravel.com/api/4.1/Illuminate/Support/Collection.html#method_pop"
			},
			"merge": {
				"code": "$newcollection = $collection->merge($collectionOrArray)",
				"api": "http://laravel.com/api/4.1/Illuminate/Support/Collection.html#method_merge"
			},
			"slice": {
				"code": "$collection->slice( $start, $length )",
				"api": "http://laravel.com/api/4.1/Illuminate/Support/Collection.html#method_slice"
			},
			"for-each": {
				"code": "$collection->each( function($val) {…} )",
				"api": "http://laravel.com/api/4.1/Illuminate/Support/Collection.html#method_each"
			},
			"filter": {
				"code": "$collection->filter( function($val) {…} )",
				"api": "http://laravel.com/api/4.1/Illuminate/Support/Collection.html#method_filter"
			},
			"map": {
				"code": "$collection->map( function($val) {…} )",
				"api": "http://laravel.com/api/4.1/Illuminate/Support/Collection.html#method_map"
			},
			"reduce": {
				"code": "$collection->reduce( function($val,$acc) {…}, $initial )",
				"api": "http://laravel.com/api/4.1/Illuminate/Support/Collection.html#method_reduce"
			},
			"sort": {
				"code": "$collection->sort( function($a,$b) {…} )",
				"api": "http://laravel.com/api/4.1/Illuminate/Support/Collection.html#method_sort"
			},
			"reverse": {
				"code": "$collection->reverse()",
				"api": "http://laravel.com/api/4.1/Illuminate/Support/Collection.html#method_reverse"
			}
		},
		"http-server": {
			"output": {
				"code": "return \"Hello, World!\"",
				"api": "http://laravel.com/docs/quick#routing"
			},
			"get-data": {
				"code": "Input::get('myvar')",
				"api": "http://laravel.com/docs/requests#basic-input"
			},
			"post-data-form": {
				"code": "Input::get('myvar') // 'get' as in retrieve, not 'get' as in GET method",
				"api": "http://laravel.com/docs/requests#basic-input"
			},
			"uploaded-file": {
				"code": "Input::file('myfile')->move($destinationPath)",
				"api": "http://laravel.com/docs/requests#files"
			},
			"get-cookie": {
				"code": "Cookie::get('cookiename')",
				"api": "http://laravel.com/docs/requests#cookies"
			},
			"set-cookie": {
				"code": "Cookie::queue($name, $value, $minutes)",
				"api": "http://laravel.com/docs/requests#cookies"
			},
			"get-header": {
				"code": "Request::header('headername')",
				"api": "http://laravel.com/docs/requests#request-information"
			},
			"set-header": {
				"code": "$response = Response::make($contents, $statusCode);\n$response->header($headername, $value);",
				"api": "http://laravel.com/docs/responses#basic-responses"
			},
			"status-code": {
				"code": "Response::make($contents, $statusCode)",
				"api": "http://laravel.com/docs/responses#basic-responses"
			},
			"content-type": {
				"code": "$response = Response::make($contents, $statusCode);\n$response->header('Content-Type', $value);",
				"api": "http://laravel.com/docs/responses#basic-responses"
			},
			"redirect": {
				"code": "Redirect::to(url)\nRedirect::route(mynamedroute,array('param'=>'val'))",
				"api": "http://laravel.com/docs/responses#redirects"
			},
			"get-session-var": {
				"code": "Session::get('key');",
				"api": "http://laravel.com/docs/session#session-usage"
			},
			"set-session-var": {
				"code": "Session::put('key', 'value');",
				"api": "http://laravel.com/docs/session#session-usage"
			},
			"remove-session-var": {
				"code": "Session::forget('key');",
				"api": "http://laravel.com/docs/session#session-usage"
			},
			"get-flash-var": {
				"code": "Session::get('key');\n// same as normal session get",
				"api": "http://laravel.com/docs/session#flash-data"
			},
			"set-flash-var": {
				"code": "Session::flash('key', 'value');",
				"api": "http://laravel.com/docs/session#flash-data"
			},
			"remove-flash-var": {
				"code": "Session::keep(array('item1','item2',…));",
				"api": "http://laravel.com/docs/session#flash-data"
			}
		},
		"validation": {
			"validate": {
				"code": "$validator = Validator::make($data, array( 'myfield' => array('required','min:8', … )));\nif( $validator->fails() ) {\n    $messages = $validator->messages();\n    …\n}",
				"api": "http://laravel.com/docs/validation#basic-usage"
			},
			"custom-validator": [
				{
					"code": "Validator::extend('my_validator_name', function($attribute, $value, $parameters) {…});",
					"api": "http://laravel.com/docs/validation#custom-validation-rules"
				},
				{
					"code": "Validator::extend('my_validator_name', 'MyValidatorClass@myValidatorName');",
					"api": "http://laravel.com/docs/validation#custom-validation-rules"
				},
				{
					"code": [
						{
							"file": "MyValidatorClass.php",
							"contents": "class MyValidatorClass extends Illuminate\\Validation\\Validator {\n    public function my_validator_name( $attribute, $value, $parameters ) {…}\n}"
						},
						{
							"file": "(some file run on start)",
							"contents": "Validator::resolver(function($translator, $data, $rules, $messages) {\n    return new MyValidatorClass($translator, $data, $rules, $messages);\n});"
						}
					],
					"api": "http://laravel.com/docs/validation#custom-validation-rules"
				}
			],
			"required": {
				"code": "required",
				"api": "http://laravel.com/docs/validation#rule-required"
			},
			"required-if": {
				"code": "required_if:field,value",
				"api": "http://laravel.com/docs/validation#rule-required-if"
			},
			"required-with": {
				"code": "required_with:otherfield1,otherfield2,…",
				"api": "http://laravel.com/docs/validation#rule-required-with"
			},
			"required-without": {
				"code": "required_without:otherfield1,otherfield2,…",
				"api": "http://laravel.com/docs/validation#rule-required-without"
			},
			"required-without-all": {
				"code": "required_without_all:otherfield1,otherfield2,…",
				"api": "http://laravel.com/docs/validation#rule-required-without-all"
			},
			"min-length": {
				"code": "min:3",
				"api": "http://laravel.com/docs/validation#rule-min"
			},
			"max-length": {
				"code": "max:12",
				"api": "http://laravel.com/docs/validation#rule-max"
			},
			"exact-length": {
				"code": "size:6",
				"api": "http://laravel.com/docs/validation#rule-size"
			},
			"date": {
				"code": "date",
				"api": "http://laravel.com/docs/validation#rule-date"
			},
			"date-of-format": {
				"code": "date_format:Y-m-d",
				"api": "http://laravel.com/docs/validation#rule-date-format"
			},
			"before-date": {
				"code": "before:'2014-01-26'",
				"api": "http://laravel.com/docs/validation#rule-before"
			},
			"after-date": {
				"code": "after:'2014-01-26'",
				"api": "http://laravel.com/docs/validation#rule-after"
			},
			"email": {
				"code": "email",
				"api": "http://laravel.com/docs/validation#rule-email"
			},
			"url": {
				"code": "url",
				"api": "http://laravel.com/docs/validation#rule-url"
			},
			"active-url": {
				"code": "active_url",
				"api": "http://laravel.com/docs/validation#rule-active-url"
			},
			"ip-address": {
				"code": "ip",
				"api": "http://laravel.com/docs/validation#rule-ip"
			},
			"alphabetic": {
				"code": "alpha",
				"api": "http://laravel.com/docs/validation#rule-alpha"
			},
			"alphanumeric": {
				"code": "alpha_num",
				"api": "http://laravel.com/docs/validation#rule-alpha-num"
			},
			"word-character": {
				"code": "alpha_dash",
				"api": "http://laravel.com/docs/validation#rule-alpha-dash"
			},
			"regex": {
				"code": "regex:mypattern",
				"api": "http://laravel.com/docs/validation#rule-regex"
			},
			"number": {
				"code": "numeric",
				"api": "http://laravel.com/docs/validation#rule-numeric"
			},
			"greater-than": {
				"code": "min:6",
				"api": "http://laravel.com/docs/validation#rule-min"
			},
			"less-than": {
				"code": "max:20",
				"api": "http://laravel.com/docs/validation#rule-max"
			},
			"between": {
				"code": "between:3,12",
				"api": "http://laravel.com/docs/validation#rule-between"
			},
			"equals-field": {
				"code": "same:otherfieldname",
				"api": "http://laravel.com/docs/validation#rule-same"
			},
			"not-equals-field": {
				"code": "different:otherfieldname",
				"api": "http://laravel.com/docs/validation#rule-different"
			},
			"in-list": {
				"code": "in:foo,bar,…",
				"api": "http://laravel.com/docs/validation#rule-in"
			},
			"not-in-list": {
				"code": "not_in:foo,bar,…",
				"api": "http://laravel.com/docs/validation#rule-not-in"
			},
			"accepted": {
				"code": "accepted",
				"api": "http://laravel.com/docs/validation#rule-accepted"
			},
			"confirmed": {
				"code": "confirmed",
				"api": "http://laravel.com/docs/validation#rule-confirmed"
			},
			"exists-in-database": {
				"code": "exists:tablename,columnname",
				"api": "http://laravel.com/docs/validation#rule-exists"
			},
			"not-exists-in-database": {
				"code": "unique:tablename,columnname",
				"api": "http://laravel.com/docs/validation#rule-unique"
			},
			"file-is-image": {
				"code": "image",
				"api": "http://laravel.com/docs/validation#rule-image"
			},
			"file-extension": {
				"code": "mimes:txt,csv",
				"api": "http://laravel.com/docs/validation#rule-mimes"
			},
			"file-size": {
				"code": "size:1024",
				"api": "http://laravel.com/docs/validation#rule-size"
			},
			"file-min-size": {
				"code": "size:1024",
				"api": "http://laravel.com/docs/validation#rule-size"
			},
			"file-max-size": {
				"code": "size:1024",
				"api": "http://laravel.com/docs/validation#rule-size"
			}
		},
		"mvc": {
			"route": {
				"code": [
					{
						"file": "app/routes.php",
						"contents": "Route::get('product/{num}', 'CatalogController@productLookup');"
					}
				],
				"api": "http://laravel.com/docs/controllers#basic-controllers"
			},
			"controller-action": {
				"code": "class SampleController extends BaseController {\n    public function myaction($id) {…}\n}",
				"api": "http://laravel.com/docs/controllers#basic-controllers"
			},
			"render-view": {
				"code": "return View::make('viewname', $data)",
				"api": "http://laravel.com/docs/responses#views"
			},
			"url": {
				"code": "action('MyController@myAction', $params);\nroute('routename', $params);",
				"api": "http://laravel.com/docs/helpers#urls"
			},
			"output-form-element": {
				"code": "echo Form::model($user, array('route' => array('user.update', $user->id)))\necho Form::text('myfield', 'mydefaultvalue');",
				"api": "http://laravel.com/docs/html"
			},
			"log": {
				"code": "Log::info('hello, log!')",
				"api": "http://laravel.com/docs/errors#logging"
			}
		}
	}
}