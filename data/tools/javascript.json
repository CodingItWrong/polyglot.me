{
	"id": "javascript",
	"name": "JavaScript",
	"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference",
	"featuresets": {
		"basics": {
			"hello-world": {
				"code": "<html>\n<head>\n<script type=\"text/javascript\">\nconsole.log(\"Hello, World!\")\n</script>\n</head>\n<body>\n</body>\n</html>"
			}
		},
		"types": {
			"string-to-int": {
				"code": "parseInt( mystr )",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt"
			},
			"int-to-string": {
				"code": "'' + myint"
			},
			"string-to-float": {
				"code": "parseFloat( mystr )",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseFloat"
			},
			"float-to-string": {
				"code": "'' + $myfloat"
			},
			"float-to-int": {
				"code": "intval( $myfloat )",
				"api": "http://php.net/manual/en/function.intval.php"
			}
		},
		"strings": {
			"length": {
				"code": "mystring.length",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length"
			},
			"comparison": {
				"code": "a == b",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference#Operators",
				"sample": "http://jsfiddle.net/needbee/v6Tky/2/"
			},
			"lowercase": {
				"code": "str.toLowerCase()",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase"
			},
			"uppercase": {
				"code": "str.toUpperCase()",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase"
			},
			"substring": [
				{
					"code": "str.substring( start, end )",
					"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring"
				},
				{
					"code": "str.substr( start, length )",
					"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr"
				}
			],
			"concatenate":
			{
				"code": "a + b",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/String_Operators?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FOperators%2FString_Operators"
			},
			"index-of": {
				"code": "str.indexOf( mysubstring )",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf"
			},
			"replace": {
				"code": "var myregex = /…/g;\nstr.replace(myregex, tmpl);",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace"
			},
			"split-on-string": {
				"code": "str.split( delim )",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"
			},
			"split-on-regex": {
				"code": "str.split( myregex )",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"
			},
			"join": {
				"code": "myarray.join( delim )",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join"
			},
			"regex-match": {
				"code": "var myregex = //;\nmyregex.test(str)",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test"
			},
			"regex-find": {
				"code": "var myregex = /…/g;\nwhile( match = myregex.exec(str) ) { … }",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec"
			},
			"regex-replace": {
				"code": "var myregex = /…/g;\nstr.replace(myregex, tmpl);",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace"
			}
		},
		"math": {
			"floor": {
				"code": "Math.floor(myfloat)",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor"
			},
			"ceiling": {
				"code": "Math.ceil(myfloat)",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil"
			},
			"round": {
				"code": "Math.round($myfloat)",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round"
			},
			"fraction-part": {
				"code": "mynum % 1",
				"api": "http://stackoverflow.com/questions/4512306/get-decimal-portion-of-a-number-with-javascript"
			},
			"random": {
				"code": "Math.floor(Math.random() * (max - min + 1) + min)",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random"
			},
			"min": {
				"code": "Math.min.apply( null, myarray )",
				"api": "http://stackoverflow.com/questions/1669190/javascript-min-max-array-values"
			},
			"max": {
				"code": "Math.max.apply( null, myarray )",
				"api": "http://stackoverflow.com/questions/1669190/javascript-min-max-array-values"
			}
		},
		"dates": {
			"date-object": {
				"code": "new Date()",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date"
			},
			"timestamp": {
				"code": "new Date().getTime()",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime"
			},
			"compare": {
				"code": "a < b\na > b\n+a == +b // convert to millisecond so doesn't do object equality",
				"api": "http://stackoverflow.com/questions/492994/compare-dates-with-javascript"
			}
		},
		"collections": {
			"define": {
				"code": "[1,2,3,…]",
				"api": "http://php.net/manual/en/language.types.array.php"
			},
			"define-associative": {
				"code": "{\"key1\": \"val1\", \"key2\": \"val2\", …}",
				"api": "http://php.net/manual/en/language.types.array.php"
			},
			"length": {
				"code": "myarray.length",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length"
			},
			"set": {
				"code": "myarray[index] = value",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#Accessing_array_elements"
			},
			"set-associative": {
				"code": "myarray[key] = value",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#Accessing_array_elements"
			},
			"get": {
				"code": "myarray[index]",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#Accessing_array_elements"
			},
			"get-associative": {
				"code": "myarray[key]",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#Accessing_array_elements"
			},
			"push": {
				"code": "myarray.push( myval )",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push"
			},
			"pop": {
				"code": "myarray.pop()",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop"
			},
			"merge": {
				"code": "a.concat( b )",
				"api": "Array.prototype.concat()"
			},
			"slice": {
				"code": "myarray.slice( start, end )",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice"
			},
			"for-each": [
				{
					"code": "for( var mykey in myarray ) { val myval = myarray[mykey]; …}",
					"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in"
				},
				{
					"code": "myarray.forEach( function( myval ) {…} )",
					"version": "1.6",
					"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach"
				}
			],
			"for-each-associative": [
				{
					"code": "for( var mykey in myarray ) { val myval = myarray[mykey]; …}",
					"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in"
				},
				{
					"code": "myarray.forEach( function( myval, mykey ) {…} )",
					"version": "1.6",
					"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach"
				}
			],
			"keys": {
				"code": "Object.keys( myarray )",
				"version": "1.8.5",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys"
			},
			"contains": {
				"code": "-1 != myarray.indexOf(val)",
				"version": "1.6",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf"
			},
			"index-of": {
				"code": "myarray.indexOf(val)",
				"version": "1.6",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf"
			},
			"filter": {
				"code": "myarray.filter( function(val) {…} )",
				"version": "1.6",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"
			},
			"map": {
				"code": "myarray.map( function(val) {…} )",
				"version": "1.6",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"
			},
			"reduce": {
				"code": "myarray.reduce( function(val) {…}, myinitial )",
				"version": "1.8",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce"
			},
			"sort": {
				"code": "myarray.sort(function(a,b) {…} )",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort"
			},
			"reverse": {
				"code": "myarray.reverse()",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse"
			}
		},
		"functions": {
			"define": {
				"code": "function myfunc( arg1, arg2 ) {…}",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope"
			},
			"call": {
				"code": "myfunc( val1, val2 )",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope"
			},
			"default-arguments": {
				"code": "function myfunc( arg1, arg2 ) {\n    if( !arg1 ) { arg1 = 'default'; }\n    …\n}",
				"api": "http://www.openjs.com/articles/optional_function_arguments.php"
			},
			"n-arguments": {
				"code": "function myfunc() {\n    for( var i = 0; i < arguments.length; i++ ) {…}\n    …\n}",
				"api": "http://www.openjs.com/articles/optional_function_arguments.php"
			},
			"named-arguments": {
				"code": "function myfunc( arg_associative_array ) {…}\n\nmyfunc({ foo: 27, bar:\"baz\"});"
			},
			"overloading": [
				{
					"code": "function myfunc( arg1, arg2 ) {\n    if( !arg1 ) { arg1 = 'default'; }\n    …\n}",
					"api": "http://www.openjs.com/articles/optional_function_arguments.php"
				},
				{
					"code": "function myfunc() {\n    for( var i = 0; i < arguments.length; i++ ) {…}\n    …\n}",
					"api": "http://www.openjs.com/articles/optional_function_arguments.php"
				}
			],
			"define-closure": {
				"code": "var closurevar = function( $arg1, $arg2 ) {…};",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope"
			},
			"call-closure": {
				"code": "closurevar( $val1, $val2 )",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope"
			}
		},
		"objects": {
			"define-class": {
				"code": "function MyClass() {…}",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript?redirectlocale=en-US&redirectslug=JavaScript%2FIntroduction_to_Object-Oriented_JavaScript"
			},
			"instantiate-class": {
				"code": "var myinstance = new MyClass();",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript?redirectlocale=en-US&redirectslug=JavaScript%2FIntroduction_to_Object-Oriented_JavaScript"
			},
			"instance-of": {
				"code": "myobj instanceof MyClass",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript?redirectlocale=en-US&redirectslug=JavaScript%2FIntroduction_to_Object-Oriented_JavaScript"
			},
			"define-field": {
				"code": "function MyClass() {\n    this.myfield = 27;\n}",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript?redirectlocale=en-US&redirectslug=JavaScript%2FIntroduction_to_Object-Oriented_JavaScript"
			},
			"access-field": {
				"code": "myobj.myfield",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript?redirectlocale=en-US&redirectslug=JavaScript%2FIntroduction_to_Object-Oriented_JavaScript"
			},
			"has-field": {
				"code": "myobj.hasOwnProperty('myfield')",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty"
			},
			"define-method": {
				"code": "function MyClass() {\n    this.mymethod = function( arg1, arg2 ) {…};\n}",
				"api": "http://javascript.crockford.com/private.html"
			},
			"call-method": {
				"code": "myobj.mymethod( val1, val2 )",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript?redirectlocale=en-US&redirectslug=JavaScript%2FIntroduction_to_Object-Oriented_JavaScript"
			},
			"has-method": {
				"code": "myobj.hasOwnProperty('mymethod')",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty"
			},
			"this": {
				"code": "this",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript?redirectlocale=en-US&redirectslug=JavaScript%2FIntroduction_to_Object-Oriented_JavaScript"
			},
			"define-class-method": {
				"code": "MyClass.prototype.mymethod = function( arg1, arg2 ) {…} // same as instance method",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript?redirectlocale=en-US&redirectslug=JavaScript%2FIntroduction_to_Object-Oriented_JavaScript"
			},
			"call-class-method": {
				"code": "MyClass.prototype.mymethod( val1, val2 )",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript?redirectlocale=en-US&redirectslug=JavaScript%2FIntroduction_to_Object-Oriented_JavaScript"
			},
			"constructor": {
				"code": "// in js the constructor is the same thing as the class definition\nfunction MyClass() {…}",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript?redirectlocale=en-US&redirectslug=JavaScript%2FIntroduction_to_Object-Oriented_JavaScript"
			},
			"inheritance": {
				"code": "function MyChildClass() {…}\nMyChildClass.prototype = new MyParentClass();\nMyChildClass.prototype.constructor = MyChildClass; // otherwise it uses the parent's constructor",
				"api": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript?redirectlocale=en-US&redirectslug=JavaScript%2FIntroduction_to_Object-Oriented_JavaScript"
			},
			"parent-method": {
				"code": "function MyParentClass() {}\nMyParentClass.prototype.mymethod = function(){…};\n\nfunction MyChildClass() {\n    this.parent = this; // whatever the parent class is at time constructor called\n}\nMyChildClass.prototype = new MyParentClass();\nMyChildClass.prototype.constructor = MyChildClass;\nMyChildClass.prototype.mymethod = function() {\n    this.parent.mymethod();\n}",
				"api": "http://stackoverflow.com/questions/12729824/call-parent-method-in-a-javascript-class"
			},
			"declare-public": {
				"code": "function MyClass() {\n    this.mypublicvar = 27;\n\n    // Crockford calls this \"privileged\", but it functions like \"public\" in other languages\n    this.mypublicmethod = function() {…}\n}",
				"api": "http://javascript.crockford.com/private.html"
			},
			"declare-private": {
				"code": "function MyClass() {\n    var myprivatevar = 27;\n    var that = this; // allows private method to access this\n    var myprivatemethod = function() {…}\n}",
				"api": "http://javascript.crockford.com/private.html"
			}
		}
	}
}
