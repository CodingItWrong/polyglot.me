{
	"id": "jquery",
	"name": "jQuery",
	"api": "http://api.jquery.com/",
	"featuresets": {
		"types": {
			"is-int": {
				"code": "$.isNumeric(myvar) && (myvar % 1 == 0)",
				"api": "http://api.jquery.com/jQuery.isNumeric/"
			},
			"is-float": {
				"code": "$.isNumeric(myvar) && (myvar % 1 != 0)",
				"api": "http://api.jquery.com/jQuery.isNumeric/"
			},
			"is-array": {
				"code": "$.isArray(myvar) // or associative",
				"api": "http://api.jquery.com/jQuery.isArray/"
			},
			"is-associative-array": {
				"code": "$.isArray(myvar) // or non-associative",
				"api": "http://api.jquery.com/jQuery.isArray/"
			},
			"is-function": {
				"code": "$.isFunction(myvar)",
				"api": "http://api.jquery.com/jQuery.isFunction/"
			}
		},
		"strings": {
			"trim": "$.trim(str)",
			"api": "http://api.jquery.com/jQuery.trim/"
		},
		"collections": {
			"merge": {
				"code": "$.merge( [], a, b )",
				"api": "http://api.jquery.com/jQuery.merge/"
			},
			"for-each":
			{
				"code": "$.each( myarray, function( mykey, myval ) {…} )",
				"api": "http://api.jquery.com/jQuery.each/"
			},
			"for-each-associative": {
				"code": "$.each( myarray, function( mykey, myvalue ) {…} )",
				"api": "http://api.jquery.com/jQuery.each/"
			},
			"contains": {
				"code": "-1 != $.inArray(val, myarray)",
				"api": "http://api.jquery.com/jQuery.inArray/"
			},
			"index-of": {
				"code": "$.inArray(val, myarray)",
				"api": "http://api.jquery.com/jQuery.inArray/"
			},
			"filter": {
				"code": "$.grep( myarray, function(val) {…} )",
				"api": "http://api.jquery.com/jQuery.grep/"
			},
			"map": {
				"code": "$.map( myarray, function(val) {…} )",
				"api": "http://api.jquery.com/jQuery.map/"
			}
		},
		"http-client": {
			"simple-request": {
				"code": "$.get('path/on/server', function(data) {…})",
				"api": "http://api.jquery.com/jQuery.get/"
			},
			"full-request": {
				"code": "$.ajax('path/on/server', {\n    accepts: mimeType,\n    cache: false,\n    contentType: requestDataContentType,\n    data: requestData,\n    dataType: responseDataParsingType,\n    error: errorHandler,\n    headers: headerMap,\n    statusCode: statusCodeHandlerMap,\n    success: successHandler,\n    type: httpVerbString\n});",
				"api": "http://api.jquery.com/jQuery.ajax/"
			}
		}
	}
}
