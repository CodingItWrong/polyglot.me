{
	"featuresets": [
		{
			"id": "basics",
			"name": "Basics",
			"features": [
				{
					"id": "hello-world",
					"name": "Hello, World!",
					"description": "a full program that displays \"Hello, World!\"",
					"reference": "http://en.wikipedia.org/wiki/Hello_World"
				}
			]
		},
		{
			"id": "types",
			"name": "Types",
			"features": [
				{
					"id": "is-boolean",
					"name": "Is Boolean",
					"description": "returns true if the variable is a boolean",
					"reference": "http://en.wikipedia.org/wiki/Boolean_data_type"
				},
				{
					"id": "is-int",
					"name": "Is Integer",
					"description": "returns true if the variable is an integer",
					"reference": "http://en.wikipedia.org/wiki/Integer_(computer_science)"
				},
				{
					"id": "is-float",
					"name": "Is Float",
					"description": "returns true if the variable is a floating point number",
					"reference": "http://en.wikipedia.org/wiki/Floating_point"
				},
				{
					"id": "is-string",
					"name": "Is String",
					"description": "returns true if the variable is a string",
					"reference": "http://en.wikipedia.org/wiki/String_(computer_science)"
				},
				{
					"id": "is-date",
					"name": "Is Date",
					"description": "returns true if the variable is a date/time"
				},
				{
					"id": "is-regex",
					"name": "Is Regex",
					"description": "returns true if the variable is a regular expression",
					"reference": "http://en.wikipedia.org/wiki/Regular_expression"
				},
				{
					"id": "is-array",
					"name": "Is Array",
					"description": "returns true if the variable is an array",
					"reference": "http://en.wikipedia.org/wiki/Array_data_type"
				},
				{
					"id": "is-associative-array",
					"name": "Is Associative Array",
					"description": "returns true if the variable is an associative array",
					"reference": "http://en.wikipedia.org/wiki/Associative_array"
				},
				{
					"id": "is-object",
					"name": "Is Object",
					"description": "returns true if the variable is an object",
					"reference": "http://en.wikipedia.org/wiki/Object_(computer_science)"
				},
				{
					"id": "is-function",
					"name": "Is Function",
					"description": "returns true if the variable is a function/closure",
					"reference": "http://en.wikipedia.org/wiki/Function_type"
				},
				{
					"id": "is-null",
					"name": "Is Null",
					"description": "returns true if the variable is null/nil",
					"reference": "http://en.wikipedia.org/wiki/Null_(computer_programming)"
				},
				{
					"id": "is-undefined",
					"name": "Is Undefined",
					"description": "returns true if the variable is undefined",
					"reference": "http://en.wikipedia.org/wiki/Undefined_variable"
				},
				{
					"id": "string-to-int",
					"name": "String to Integer",
					"description": "converts string mystr into an integer"
				},
				{
					"id": "int-to-string",
					"name": "Integer to String",
					"description": "converts integer myint into a string"
				},
				{
					"id": "string-to-float",
					"name": "String to Float",
					"description": "converts string mystr into a floating point number"
				},
				{
					"id": "float-to-string",
					"name": "Float to String",
					"description": "converts floating point number myfloat into a string"
				},
				{
					"id": "float-to-int",
					"name": "Float to Integer",
					"description": "converts floating point number myfloat into an integer"
				}
			]
		},
		{
			"id": "strings",
			"name": "Strings",
			"features": [
				{
					"id": "length",
					"name": "String Length",
					"description": "return number of characters in string"
				},
				{
					"id": "comparison",
					"name": "String Comparison",
					"description": "check if string variables a and b are the same string"
				},
				{
					"id": "lowercase",
					"name": "Lower Case",
					"description": "convert string str to lower case"
				},
				{
					"id": "uppercase",
					"name": "Upper Case",
					"description": "convert string str to upper case"
				},
				{
					"id": "concatenate",
					"name": "Concatenate",
					"description": "join string a and b into a single string"
				},
				{
					"id": "substring",
					"name": "Substring",
					"description": "retrieve characters start thru end (or length) of string str"
				},
				{
					"id": "index-of",
					"name": "Index of Substring",
					"description": "find out what position a substring mysubstring is within a string str"
				},
				{
					"id": "trim",
					"name": "Trim",
					"description": "removes whitespace from the start and end of the string"
				},
				{
					"id": "replace",
					"name": "Replace",
					"description": "replace all occurrences of a substring with another string"
				},
				{
					"id": "split-on-string",
					"name": "Split on String",
					"description": "split a string str into multiple strings wherever a delimiter string delim is found"
				},
				{
					"id": "split-on-regex",
					"name": "Split on Regex",
					"description": "split a string str into multiple strings wherever a delimiter regex myregex matches"
				},
				{
					"id": "join",
					"name": "Join",
					"description": "joins elements in array myarray into a single string, joined by delimiter string delim"
				},
				{
					"id": "regex-match",
					"name": "Regex Match",
					"description": "returns whether or not a given regex myregex matches in a string str"
				},
				{
					"id": "regex-find",
					"name": "Regex Find",
					"description": "find all the matches to a regex myregex in a string str"
				},
				{
					"id": "regex-replace",
					"name": "Regex Replace",
					"description": "replaces all regex myregex matches in string str with a replacement template tmpl (containing placeholders $1, $2 etc)"
				}
			]
		},
		{
			"id": "math",
			"name": "Math",
			"features": [
				{
					"id": "floor",
					"name": "Floor",
					"description": "rounds down float myfloat to the nearest integer below the decimal",
					"reference": "http://en.wikipedia.org/wiki/Floor_(mathematics)"
				},
				{
					"id": "ceiling",
					"name": "Ceiling",
					"description": "rounds up float myfloatto the nearest integer below the decimal",
					"reference": "http://en.wikipedia.org/wiki/Ceiling_function"
				},
				{
					"id": "round",
					"name": "Round",
					"description": "rounds float myfloat to the nearest integer to the decimal, up or down"
				},
				{
					"id": "fraction-part",
					"name": "Fraction Part",
					"description": "finds the fraction part of the decimal number mynum"
				},
				{
					"id": "random",
					"name": "Random",
					"description": "returns a random number"
				},
				{
					"id": "min",
					"name": "Min",
					"description": "finds the minimum value in the array myarray"
				},
				{
					"id": "max",
					"name": "Max",
					"description": "finds the maximum value in the array myarray"
				}
			]
		},
		{
			"id": "dates",
			"name": "Dates",
			"features": [
				{
					"id": "date-object",
					"name": "Date Object",
					"description": "get an object representing the current date and time"
				},
				{
					"id": "timestamp",
					"name": "Timestamp",
					"description": "get time in milliseconds from date object mydate",
					"reference": "http://en.wikipedia.org/wiki/Unix_time"
				},
				{
					"id": "format",
					"name": "Format",
					"description": "format date mydate into a string using format specifier myformat (details on format specifier in the API docs)"
				},
				{
					"id": "parse",
					"name": "Parse",
					"description": "parse a string $datestring into a date object"
				},
				{
					"id": "compare",
					"name": "Compare",
					"description": "determine if date a is equal to, earlier than, or later than date b"
				},
				{
					"id": "offset",
					"name": "Offset",
					"description": "alter the date mydate by a fixed interval"
				}
			]
		},
		{
			"id": "collections",
			"name": "Collections",
			"features": [
				{
					"id": "define",
					"name": "Define Array",
					"description": "creates a new array from static values"
				},
				{
					"id": "define-associative",
					"name": "Define Associative Array",
					"description": "creates a new associative array from static values"
				},
				{
					"id": "length",
					"name": "Array Length",
					"description": "return the number of elements in array myarray (a.k.a. size, count)"
				},
				{
					"id": "get",
					"name": "Get",
					"description": "get an element from an array"
				},
				{
					"id": "get-associative",
					"name": "Get Associative",
					"description": "get an element from an associative array"
				},
				{
					"id": "set",
					"name": "Set",
					"description": "set an element in an array"
				},
				{
					"id": "set-associative",
					"name": "Set Associative",
					"description": "set an element in an associative array"
				},
				{
					"id": "push",
					"name": "Push",
					"description": "add value myval onto end of array myarray",
					"reference": "http://en.wikipedia.org/wiki/Stack_(abstract_data_type)"
				},
				{
					"id": "pop",
					"name": "Pop",
					"description": "remove value from end of array myarray and return it",
					"reference": "http://en.wikipedia.org/wiki/Stack_(abstract_data_type)"
				},
				{
					"id": "merge",
					"name": "Merge",
					"description": "join array a and b into a single array with all the elements of each"
				},
				{
					"id": "slice",
					"name": "Slice",
					"description": "retrieve elements start through end (or length) of array myarray"
				},
				{
					"id": "for-each",
					"name": "For Each",
					"description": "execute code for each element in array myarray, setting the variable myval to each element"
				},
				{
					"id": "for-each-associative",
					"name": "For Each Associative",
					"description": "execute code for each element in array myarray, setting the variable myval to each value and mykey to the corresponding key"
				},
				{
					"id": "keys",
					"name": "Keys",
					"description": "get all keys in associative array myarray"
				},
				{
					"id": "values",
					"name": "Values",
					"description": "get all values in associative array myarray"
				},
				{
					"id": "contains",
					"name": "Contains",
					"description": "returns true if array myarray contains value val"
				},
				{
					"id": "index-of",
					"name": "Index Of",
					"description": "returns the index of first instance of value val in array myarray"
				},
				{
					"id": "filter",
					"name": "Filter",
					"description": "returns all elements in array myarray for which closure mycond returns true",
					"reference": "http://en.wikipedia.org/wiki/Filter_(higher-order_function)"
				},
				{
					"id": "map",
					"name": "Map",
					"description": "create a new array by running code on each value val of original array myarray",
					"reference": "http://en.wikipedia.org/wiki/Map_(higher-order_function)"
				},
				{
					"id": "reduce",
					"name": "Reduce",
					"description": "loops through values val in array myarray, using a function to apply it to a single resulting value, starting with initial value myinitial",
					"reference": "http://en.wikipedia.org/wiki/Reduce_(higher-order_function)"
				},
				{
					"id": "sort",
					"name": "Sort",
					"description": "sorts values in myarray by running a comparison function"
				},
				{
					"id": "reverse",
					"name": "Reverse",
					"description": "reverses the order of the array elements"
				}
			]
		},
		{
			"id": "functions",
			"name": "Functions",
			"features": [
				{
					"id": "define",
					"name": "Define",
					"description": "define a function myfunc with integer arguments arg1 and arg2, returning an integer"
				},
				{
					"id": "call",
					"name": "Call",
					"description": "call a function myfunc passing in arguments val1 and val2"
				},
				{
					"id": "default-arguments",
					"name": "Default Arguments",
					"description": "allows default values to be set for some arguments, so they do not need to be passed in"
				},
				{
					"id": "n-arguments",
					"name": "N Arguments",
					"description": "allow a variable number of arguments"
				},
				{
					"id": "named-arguments",
					"name": "Named Arguments",
					"description": "clarify arguments with names"
				},
				{
					"id": "overloading",
					"name": "Overloading",
					"description": "define multiple functions with the same name but different arguments",
					"reference": "http://en.wikipedia.org/wiki/Function_overloading"
				},
				{
					"id": "define-closure",
					"name": "Define Closure",
					"description": "create an anonymous function (a.k.a. a block), which can't be called by name but is instead stored in a variable",
					"reference": "http://en.wikipedia.org/wiki/Closure_(computer_programming)"
				},
				{
					"id": "call-closure",
					"name": "Call Closure",
					"description": "call an anonymous function stored in a variable",
					"reference": "http://en.wikipedia.org/wiki/Closure_(computer_programming)"
				}
			]
		},
		{
			"id": "objects",
			"name": "Objects",
			"features": [
				{
					"id": "define-class",
					"name": "Define Class",
					"description": "define a class with variables and methods"
				},
				{
					"id": "instantiate-class",
					"name": "Instantiate Class",
					"description": "create a new instance of a class"
				},
				{
					"id": "instance-of",
					"name": "Instance Of",
					"description": "indicate whether object myobj is of class MyClass (or a descendant of it)"
				},
				{
					"id": "exact-instance-of",
					"name": "Exact Instance Of",
					"description": "indicate whether object myobj is of class MyClass (not including descendants of it)"
				},
				{
					"id": "class-of",
					"name": "Class Of",
					"description": "gets the class or class name of an object"
				},
				{
					"id": "define-field",
					"name": "Define Field",
					"description": "define a member variable/instance variable/property/attribute/field on a class"
				},
				{
					"id": "access-field",
					"name": "Access Field",
					"description": "access a field on an object"
				},
				{
					"id": "has-field",
					"name": "Has Field",
					"description": "whether or not an object has a certain field"
				},
				{
					"id": "define-method",
					"name": "Define Method",
					"description": "define a member function/method/procedure on a class"
				},
				{
					"id": "call-method",
					"name": "Call Method",
					"description": "call a method on an object"
				},
				{
					"id": "has-method",
					"name": "Has Method",
					"description": "whether or not an object has a certain metohd"
				},
				{
					"id": "this",
					"name": "This",
					"description": "refer to the current object within a method"
				},
				{
					"id": "define-constant",
					"name": "Define Constant",
					"description": "defines a constant value for a class"
				},
				{
					"id": "access-constant",
					"name": "Access Constant",
					"description": "accesses a constant value for a class"
				},
				{
					"id": "define-class-field",
					"name": "Define Class Field",
					"description": "defines a field shared across all instances of a class (sometimes known as a static field)"
				},
				{
					"id": "access-class-field",
					"name": "Access Class Field",
					"description": "access a field on a class (sometimes known as a static field)"
				},
				{
					"id": "define-class-method",
					"name": "Define Class Method",
					"description": "define a method called on a class, not an instance of it (sometimes known as a static method)"
				},
				{
					"id": "call-class-method",
					"name": "Call Class Method",
					"description": "call a method on a class (sometimes known as a static method)"
				},
				{
					"id": "constructor",
					"name": "Constructor",
					"description": "define a method called when the class is instantiated, to set it up"
				},
				{
					"id": "inheritance",
					"name": "Inheritance",
					"description": "Define a subclass of a parent class, inheriting its variables and methods"
				},
				{
					"id": "parent-method",
					"name": "Parent Method",
					"description": "call the parent class's version of a method"
				},
				{
					"id": "declare-public",
					"name": "Declare Public",
					"description": "declare a field or method to be accessible from anywhere"
				},
				{
					"id": "declare-protected",
					"name": "Declare Protected",
					"description": "declare a field or method to be accessible only from this class, parent, and child classes"
				},
				{
					"id": "declare-private",
					"name": "Declare Private",
					"description": "declare a field or method to be accessible only from this class"
				},
				{
					"id": "declare-final",
					"name": "Declare Final",
					"description": "declare that a method cannot be overridden by child classes"
				},
				{
					"id": "declare-interface",
					"name": "Declare Interface",
					"description": "declare a set of methods a class will provide without implementing them"
				},
				{
					"id": "implement-interface",
					"name": "Implement Interface",
					"description": "define a class that implements the method an interface declares"
				},
				{
					"id": "abstract-class",
					"name": "Abstract Class",
					"description": "declare a class that provides some functionality but leaves other functionality for child classes to implement, and therefore cannot be instantiated itself"
				}
			]
		},
		{
			"id": "exceptions",
			"name": "Exceptions",
			"features": [
				{
					"id": "throw-exception",
					"name": "Throw Exception",
					"description": "creates an exception and causes it to propagate up the call stack",
					"reference": "http://en.wikipedia.org/wiki/Exception_handling"
				},
				{
					"id": "catch-exception",
					"name": "Catch Exception",
					"description": "handles an exception",
					"reference": "http://en.wikipedia.org/wiki/Exception_handling"
				}
			]
		},
		{
			"id": "serialization",
			"name": "Serialization",
			"features": [
				{
					"id": "json-encode",
					"name": "JSON Encode",
					"description": "convert data into a JSON string",
					"reference": "http://json.org/"
				},
				{
					"id": "json-decode",
					"name": "JSON Decode",
					"description": "convert a JSON string into objects and arrays",
					"reference": "http://json.org/"
				},
				{
					"id": "xml-encode",
					"name": "XML Encode",
					"description": "convert data into an XML string",
					"reference": "http://en.wikipedia.org/wiki/Xml"
				},
				{
					"id": "xml-decode",
					"name": "XML Decode",
					"description": "convert an XML string into objects and arrays",
					"reference": "http://en.wikipedia.org/wiki/Xml"
				}
			]
		},
		{
			"id": "http-server",
			"name": "HTTP Server",
			"features": [
				{
					"id": "output",
					"name": "Output",
					"description": "outputs data to the client"
				},
				{
					"id": "get-data",
					"name": "GET Data",
					"description": "retrieve a GET (query string) field"
				},
				{
					"id": "post-data-form",
					"name": "POST Data (Form)",
					"description": "retrieve a POST (form) field",
					"reference": "http://en.wikipedia.org/wiki/POST_(HTTP)#Use_for_submitting_web_forms"
				},
				{
					"id": "post-data-raw",
					"name": "POST Data (Raw)",
					"description": "retrieve the raw POST data, i.e. if it is JSON or XML",
					"reference": "http://en.wikipedia.org/wiki/POST_(HTTP)"
				},
				{
					"id": "uploaded-file",
					"name": "Uploaded File",
					"description": "get info and data for an uploaded file",
					"reference": "http://en.wikipedia.org/wiki/Multipart/form-data#Form_Data"
				},
				{
					"id": "get-cookie",
					"name": "Get Cookie",
					"description": "retrieves a cookie sent by the client",
					"reference": "http://en.wikipedia.org/wiki/HTTP_cookie"
				},
				{
					"id": "set-cookie",
					"name": "Set Cookie",
					"description": "sets a cookie to be sent to the client",
					"reference": "http://en.wikipedia.org/wiki/HTTP_cookie"
				},
				{
					"id": "get-header",
					"name": "Get Header",
					"description": "gets a request header sent from the client",
					"reference": "http://en.wikipedia.org/wiki/List_of_HTTP_headers"
				},
				{
					"id": "set-header",
					"name": "Set Header",
					"description": "sets a response header to be sent to the client",
					"reference": "http://en.wikipedia.org/wiki/List_of_HTTP_headers"
				},
				{
					"id": "status-code",
					"name": "Status Code",
					"description": "sets the status code returned",
					"reference": "http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Status_codes"
				},
				{
					"id": "content-type",
					"name": "Content Type",
					"description": "sets the content type header",
					"reference": "http://en.wikipedia.org/wiki/Content_type"
				},
				{
					"id": "redirect",
					"name": "Redirect",
					"description": "redirect to another URL"
				},
				{
					"id": "get-session-var",
					"name": "Get Session Var",
					"description": "retrieves a variable from the session"
				},
				{
					"id": "set-session-var",
					"name": "Set Session Var",
					"description": "sets a variable in the session"
				},
				{
					"id": "remove-session-var",
					"name": "Remove Session Var",
					"description": "removes a variable from the session"
				},
				{
					"id": "get-flash-var",
					"name": "Get Flash Var",
					"description": "retrieves a variable from the flash (storage over one request)"
				},
				{
					"id": "set-flash-var",
					"name": "Set Flash Var",
					"description": "sets a variable in the flash (storage over one request)"
				},
				{
					"id": "keep-flash-var",
					"name": "Keep Flash Var",
					"description": "preserves the variable in the flash for an additional request"
				}
			]
		},
		{
			"id": "http-client",
			"name": "HTTP Client",
			"features": [
				{
					"id": "simple-request",
					"name": "Simple Request",
					"description": "send a simple GET request"
				},
				{
					"id": "full-request",
					"name": "Full Request",
					"description": "send an HTTP request with all configuration parameters"
				}
			]
		},
		{
			"id": "validation",
			"name": "Validation",
			"features": [
				{
					"id": "validate",
					"name": "Validate",
					"description": "validate data, redisplaying it with errors if any (depending on the tool, it may validate post data, a model object, or any data set)",
					"reference": "http://en.wikipedia.org/wiki/Data_validation"
				},
				{
					"id": "custom-validator",
					"name": "Custom Validator",
					"description": "create a validator that validates using code you provide"
				},
				{
					"id": "required",
					"name": "Required",
					"description": "validates that the field is not empty or blank"
				},
				{
					"id": "required-if",
					"name": "Required If",
					"description": "validates that the field is not empty or blank, only if a certain other condition is met"
				},
				{
					"id": "required-with",
					"name": "Required With",
					"description": "validates that the field is not empty or blank if another field is not blank"
				},
				{
					"id": "required-without",
					"name": "Required Without",
					"description": "validates that the field is not empty or blank if any of a set of other fields is blank"
				},
				{
					"id": "required-without-all",
					"name": "Required Without All",
					"description": "validates that the field is not empty or blank if all of a set of other fields is blank"
				},
				{
					"id": "required-absent",
					"name": "Required to be Absent",
					"description": "validates that the field is empty or blank"
				},
				{
					"id": "required-from-group",
					"name": "Required From Group",
					"description": "at least n fields in the group must be filled in"
				},
				{
					"id": "min-length",
					"name": "Min Length",
					"description": "validates that the field has at least n characters"
				},
				{
					"id": "max-length",
					"name": "Max Length",
					"description": "validates that the field has at most n characters"
				},
				{
					"id": "range-length",
					"name": "Range Length",
					"description": "validates that the field has between m and n characters"
				},
				{
					"id": "exact-length",
					"name": "Exact Length",
					"description": "validates that the field has exactly n characters"
				},
				{
					"id": "phone",
					"name": "Phone",
					"description": "validates that the field contains a valid phone number"
				},
				{
					"id": "date",
					"name": "Date",
					"description": "validates that the field contains a valid date"
				},
				{
					"id": "date-of-format",
					"name": "Date of Format",
					"description": "validates that the field contains a date in a certain format"
				},
				{
					"id": "before-date",
					"name": "Before Date",
					"description": "validates that the field contains a date that is before a fixed date"
				},
				{
					"id": "after-date",
					"name": "After Date",
					"description": "validates that the field contains a date that is after a fixed date"
				},
				{
					"id": "email",
					"name": "Email",
					"description": "validates that the field contains a valid email address",
					"reference": "http://en.wikipedia.org/wiki/Email_address"
				},
				{
					"id": "email-list",
					"name": "Email List",
					"description": "validates that the field contains a comma-delimited list of valid email addresses"
				},
				{
					"id": "url",
					"name": "URL",
					"description": "validates that the field contains a valid URL (web address)",
					"reference": "http://en.wikipedia.org/wiki/URL"
				},
				{
					"id": "active-url",
					"name": "Active URL",
					"description": "validates that the field contains a valid URL with a domain name that is really in use"
				},
				{
					"id": "ip-address",
					"name": "IP Address",
					"description": "validates that the field contains a valid IP address",
					"reference": "http://en.wikipedia.org/wiki/IP_address"
				},
				{
					"id": "base64",
					"name": "Base64",
					"description": "validates that the field contains a valid base64 string",
					"reference": "http://en.wikipedia.org/wiki/Base64"
				},
				{
					"id": "alphabetic",
					"name": "Alphabetic",
					"description": "validates that the field contains only letters"
				},
				{
					"id": "alphanumeric",
					"name": "Alphanumeric",
					"description": "validates that the field contains only letters and numbers"
				},
				{
					"id": "word-character",
					"name": "Word Character",
					"description": "validates that the field contains only letters, numbers, hyphens, and underscores"
				},
				{
					"id": "regex",
					"name": "Regex",
					"description": "validates that the field matches a given regular expression",
					"reference": "http://en.wikipedia.org/wiki/Regular_expression"
				},
				{
					"id": "number",
					"name": "Number",
					"description": "validates that the field contains a number (integer or decimal)"
				},
				{
					"id": "number-of-length",
					"name": "Number of Length",
					"description": "validates that the field contains a number of n digits"
				},
				{
					"id": "number-of-length-range",
					"name": "Number of Length Range",
					"description": "validates that the field contains a number of m to n digits"
				},
				{
					"id": "integer",
					"name": "Integer",
					"description": "validates that the field contains an integer number (negative or positive)"
				},
				{
					"id": "positive-integer",
					"name": "Positive Integer",
					"description": "validates that the field contains an integer greater than or equal to 0"
				},
				{
					"id": "non-negative-integer",
					"name": "Non-Negative Integer",
					"description": "validates that the field contains a number greater than 0"
				},
				{
					"id": "even",
					"name": "Even",
					"description": "validates that the field contains an even integer"
				},
				{
					"id": "odd",
					"name": "Odd",
					"description": "validates that the field contains an odd integer"
				},
				{
					"id": "greater-than",
					"name": "Greater Than",
					"description": "validates that the field contains a number greater than a fixed number"
				},
				{
					"id": "less-than",
					"name": "Less Than",
					"description": "validates that the field contains a number less than a fixed number"
				},
				{
					"id": "between",
					"name": "Between",
					"description": "validates that the field contains a number between two fixed numbers"
				},
				{
					"id": "credit-card",
					"name": "Credit Card",
					"description": "validates that the field contains a valid credit card number",
					"reference": "http://en.wikipedia.org/wiki/Credit_card_number"
				},
				{
					"id": "equals-field",
					"name": "Equals Field",
					"description": "validates that the field's value is the same as another field's"
				},
				{
					"id": "does-not-equal-field",
					"name": "Does Not Equal Field",
					"description": "validates that the field's value is the different from another field's"
				},
				{
					"id": "equals-value",
					"name": "Equals Value",
					"description": "validates that the field's value is equal to a fixed value"
				},
				{
					"id": "in-list",
					"name": "In List",
					"description": "validates that the field's value is in a fixed list of values"
				},
				{
					"id": "not-in-list",
					"name": "Not In List",
					"description": "validates that the field's value is not in a fixed list of values"
				},
				{
					"id": "accepted",
					"name": "Accepted",
					"description": "validates that the field's value is 'yes', 'on', or 1"
				},
				{
					"id": "confirmed",
					"name": "Confirmed",
					"description": "validates that there is another field with the same name plus '_confirmation' at the end, with the same value"
				},
				{
					"id": "exists-in-database",
					"name": "Exists in Database",
					"description": "validates that the value of this field exists in a certain database column"
				},
				{
					"id": "does-not-exist-in-database",
					"name": "Does Not Exist in Database",
					"description": "validates that the value of this field does not exist in a certain database column; i.e. that it is unique"
				},
				{
					"id": "file-extension",
					"name": "File Extension",
					"description": "validates that the file uploaded in this field has one of the given set of extensions",
					"reference": "http://en.wikipedia.org/wiki/File_extension"
				},
				{
					"id": "file-is-image",
					"name": "File is Image",
					"description": "validates that the file uploaded in this field is an image"
				},
				{
					"id": "file-is-type",
					"name": "File is Type",
					"description": "validates that the file uploaded in this field has one of the given set of MIME content types",
					"reference": "http://en.wikipedia.org/wiki/Content_type"
				},
				{
					"id": "file-size",
					"name": "File Size",
					"description": "validates that the file uploaded in this field has exactly the given size"
				},
				{
					"id": "file-min-size",
					"name": "File Min Size",
					"description": "validates that the file uploaded in this field has a size less than the given value"
				},
				{
					"id": "file-max-size",
					"name": "File Max Size",
					"description": "validates that the file uploaded in this field has a size greater than the given value"
				},
				{
					"id": "validate-associated",
					"name": "Validate Associated",
					"description": "runs validations on an associated model"
				}
			]
		},
		{
			"id": "database",
			"name": "Database",
			"features": [
				{
					"id": "connect",
					"name": "Connect",
					"description": "open a db connection"
				},
				{
					"id": "disconnect",
					"name": "Disconnect",
					"description": "close a db connection"
				},
				{
					"id": "execute-hardcoded",
					"name": "Execute Hardcoded",
					"description": "runs a hard-coded query with no user-provided data (WARNING: do not directly inject variables; this is a security risk. See the Execute Dynamic feature instead)"
				},
				{
					"id": "execute-dynamic",
					"name": "Execute Dynamic",
					"description": "runs a query with user-provided data"
				},
				{
					"id": "row-count",
					"name": "Row Count",
					"description": "retrieve the number of records returned"
				},
				{
					"id": "retrieve-row",
					"name": "Retrieve Row",
					"description": "retrieve one row of data"
				},
				{
					"id": "retrieve-all-rows",
					"name": "Retrieve All Rows",
					"description": "retrieve all rows of data"
				},
				{
					"id": "new-row-id",
					"name": "New Row ID",
					"description": "retrieves the ID of the last record created"
				}
			]
		},
		{
			"id": "migrations",
			"name": "Migrations",
			"features": [
				{
					"id": "create-migration",
					"name": "Create Migration",
					"description": "creates a new migration file"
				},
				{
					"id": "create-table",
					"name": "Create Table",
					"description": "creates a table"
				},
				{
					"id": "drop-table",
					"name": "Drop Table",
					"description": "deletes a table"
				},
				{
					"id": "add-column",
					"name": "Add Column",
					"description": "adds a column to a table"
				},
				{
					"id": "change-column",
					"name": "Add Column",
					"description": "adds a column to a table"
				},
				{
					"id": "drop-column",
					"name": "Drop Column",
					"description": "deletes a column from a table"
				},
				{
					"id": "add-index",
					"name": "Add Index",
					"description": "adds an index to a table"
				},
				{
					"id": "drop-index",
					"name": "Drop Index",
					"description": "deletes an index from a table"
				},
				{
					"id": "add-foreign-key",
					"name": "Add Foreign Key",
					"description": "adds foreign key constraint to a table"
				},
				{
					"id": "drop-foreign-key",
					"name": "Drop Foreign Key",
					"description": "deletes a foreign key constraint from a table"
				},
				{
					"id": "run-migrations",
					"name": "Run Migration",
					"description": "run all migrations that have not yet been run"
				},
				{
					"id": "rollback-last-migration",
					"name": "Rollback Last Migration",
					"description": "rolls back the last set of migrations that were run"
				},
				{
					"id": "rollback-all-migrations",
					"name": "Rollback All Migration",
					"description": "rolls back all migrations"
				},
				{
					"id": "rerun-migrations",
					"name": "Rerun Migrations",
					"description": "rolls back all migrations and re-runs them"
				}
			]
		},
		{
			"id": "orm",
			"name": "Object-Relational Mapping",
			"features": [
				{
					"id": "define-table",
					"name": "Define Table",
					"description": "sets up a table and its fields for use in app"
				},
				{
					"id": "one-to-many",
					"name": "One-to-Many",
					"description": "sets up a one-to-many relationship between tables",
					"reference": "http://en.wikipedia.org/wiki/Cardinality_(data_modeling)"
				},
				{
					"id": "many-to-many",
					"name": "Many-to-Many",
					"description": "sets up a many-to-many relationship through a join table",
					"reference": "http://en.wikipedia.org/wiki/Cardinality_(data_modeling)"
				},
				{
					"id": "insert",
					"name": "Insert",
					"description": "creates a new record"
				},
				{
					"id": "update",
					"name": "Update One",
					"description": "updates fields in an existing record"
				},
				{
					"id": "update-many",
					"name": "Update Many",
					"description": "updates the fields in multiple existing records"
				},
				{
					"id": "delete",
					"name": "Delete",
					"description": "deletes an existing record"
				},
				{
					"id": "delete-many",
					"name": "Delete Many",
					"description": "deletes multiple existing records"
				},
				{
					"id": "find-by-id",
					"name": "Find by ID",
					"description": "loads a record by its primary key"
				},
				{
					"id": "find-one",
					"name": "Find One",
					"description": "loads one record based on search fields"
				},
				{
					"id": "find-many",
					"name": "Find Many",
					"description": "loads multiple records based on search fields"
				},
				{
					"id": "find-by-custom-sql",
					"name": "Find By Custom SQL",
					"description": "loads multiple records based on a custom SQL where clause"
				},
				{
					"id": "all",
					"name": "All",
					"description": "loads all records of this type"
				},
				{
					"id": "count",
					"name": "Count",
					"description": "count records matching search fields"
				}
			]
		},
		{
			"id": "templating",
			"name": "Templating",
			"features": [
				{
					"id": "render-to-browser",
					"name": "Render to Browser",
					"description": "cause a template to be rendered and returned to the browser"
				},
				{
					"id": "render-to-variable",
					"name": "Render to Variable",
					"description": "cause a template to be rendered and stored in a variable, i.e. for use in emails"
				},
				{
					"id": "output-raw",
					"name": "Output Raw",
					"description": "outputs a variable without any escaping"
				},
				{
					"id": "output-escape-html",
					"name": "Output Escape HTML",
					"description": "outputs a variable, escaped for HTML"
				},
				{
					"id": "if",
					"name": "If",
					"description": "displays content conditionally"
				},
				{
					"id": "while",
					"name": "While",
					"description": "loops while a condition is true"
				},
				{
					"id": "for",
					"name": "For",
					"description": "loops for certain values"
				},
				{
					"id": "for-each",
					"name": "For Each",
					"description": "loops over items in a collection"
				},
				{
					"id": "comment",
					"name": "Comment",
					"description": "a comment that will not be included in the rendered HTML"
				},
				{
					"id": "execute-code",
					"name": "Execute Code",
					"description": "executes arbitrary code"
				},
				{
					"id": "subview",
					"name": "Subview",
					"description": "include a subview"
				},
				{
					"id": "layout",
					"name": "Layout",
					"description": "use a layout file to wrap the specific template to show"
				}
			]
		},
		{
			"id": "mvc",
			"name": "Model-View-Controller",
			"features": [
				{
					"id": "route",
					"name": "Route",
					"description": "direct a URL to a specific controller action"
				},
				{
					"id": "controller-action",
					"name": "Controller Action",
					"description": "run code for a given URL"
				},
				{
					"id": "render-view",
					"name": "Render View",
					"description": "generate output to send to the client"
				},
				{
					"id": "url",
					"name": "URL",
					"description": "returns a URL to a route within the application"
				},
				{
					"id": "output-form-element",
					"name": "Output Form Element",
					"description": "outputs HTML for a form element, with initial data and validation errors, if any"
				},
				{
					"id": "validate",
					"name": "Validate",
					"description": "validate submitted form data, redisplaying it with errors if any"
				},
				{
					"id": "log",
					"name": "Log",
					"description": "write to a log file"
				},
				{
					"id": "csrf-protection",
					"name": "CSRF Protection",
					"description": "prevents cross-site request forgery attacks, where another site sends a user to a URL on your site that performs an action they do not intend; prevention usually entails sending a token in POSTs"
				}
			]
		}
	]
}
