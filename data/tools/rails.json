{
	"id": "rails",
	"name": "Rails",
	"api": "http://guides.rubyonrails.org/",
	"featuresets": {
		"http-server": {
			"output": {
				"code": "render text: \"Hello, World!\"",
				"api": "http://api.rubyonrails.org/classes/AbstractController/Rendering.html#method-i-render"
			},
			"get-data": {
				"code": "params[:myvar]",
				"api": "http://api.rubyonrails.org/classes/ActionDispatch/Http/Parameters.html#method-i-parameters"
			},
			"post-data-form": {
				"code": "params[:myvar]",
				"api": "http://api.rubyonrails.org/classes/ActionDispatch/Http/Parameters.html#method-i-parameters"
			},
			"post-data-raw": {
				"code": "request.body.read",
				"api": "http://api.rubyonrails.org/classes/ActionDispatch/Request.html#method-i-body"
			},
			"uploaded-file": {
				"code": "name =  upload['datafile'].original_filename\ndirectory = \"public/data\"\npath = File.join(directory, name)\nFile.open(path, \"wb\") { |f| f.write(upload['datafile'].read) }",
				"api": "http://www.tutorialspoint.com/ruby-on-rails/rails-file-uploading.htm"
			},
			"get-cookie": {
				"code": "cookies['cookiename']",
				"api": "http://api.rubyonrails.org/classes/ActionDispatch/Integration/Session.html#method-i-cookies"
			},
			"set-cookie": {
				"code": "cookies[name] = { :value => value, expires => 1.hour.from_now }",
				"api": "http://stackoverflow.com/questions/1232174/rails-cookies-set-start-date-and-expire-date"
			},
			"get-header": {
				"code": "request.headers['headername']",
				"api": "http://api.rubyonrails.org/classes/ActionDispatch/Request.html#method-i-headers"
			},
			"set-header": {
				"code": "headers[header_name] = header_value",
				"api": "http://stackoverflow.com/questions/6843044/rails-3-response-headers"
			},
			"status-code": {
				"code": "render text:mytext, status: :not_found",
				"api": "http://guides.rubyonrails.org/layouts_and_rendering.html#using-render"
			},
			"content-type": {
				"code": "render text:mytext, content_type: \"application/json\"",
				"api": "http://guides.rubyonrails.org/layouts_and_rendering.html#using-render"
			},
			"redirect": {
				"code": "redirect_to url\nredirect_to action:action_name",
				"api": "http://guides.rubyonrails.org/layouts_and_rendering.html#using-redirect-to"
			}
		},
		"validation": {
			"validate": {
				"code": [
					{
						"file": "my_model.rb",
						"contents": "class My_Model < ActiveRecord::Base\n    validates :myfield, required: true, length: { maximum: 20 }\nend"
					},
					{
						"file": "my_controller.rb",
						"contents": "if @mymodel.save\n    …\nelse\n    @errors = @mymodel.errors\nend"
					}
				],
				"api": "http://guides.rubyonrails.org/getting_started.html#adding-some-validation"
			},
			"custom-validator": [
				{
					"code": "class MyModel < ActiveRecord::Base\n    validate :my_validation_method\n\n    def my_validation_method\n        if(…)\n            errors.add(:field_name, \"is not valid for some reason explained here\"\n        end\n    end\nend",
					"api": "http://guides.rubyonrails.org/active_record_validations.html#custom-methods"
				},
				{
					"code": [
						{
							"file": "MyCustomValidator.rb",
							"contents": "class MyCustomValidator < ActiveModel::Validator\n    def validate(record)\n        unless …\n            record.errors[:field_name] << 'Error message here'\n        end\n    end\nend"
						},
						{
							"file": "My_Model.rb",
							"contents": "class My_Model < ActiveRecord::Base\n    validates_with MyCustomValidator\nend"
						}
					],
					"api": "http://guides.rubyonrails.org/active_record_validations.html#custom-validators"
				}
			],
			"required": {
				"code": "presence: true",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#presence"
			},
			"required-absent": {
				"code": "absence: true",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#absence"
			},
			"min-length": {
				"code": "length: { minimum: 3 }",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#length"
			},
			"max-length": {
				"code": "length: { maximum: 12 }",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#length"
			},
			"range-length": {
				"code": "length: { in: 3..12 }",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#length"
			},
			"exact-length": {
				"code": "length: { is: 6 }",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#length"
			},
			"regex": {
				"code": "format: { with: /mypattern/, message: 'This is the error message' }",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#format"
			},
			"number": {
				"code": "numericality: true",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#numericality"
			},
			"integer": {
				"code": "numericality: { only_integer: true }",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#numericality"
			},
			"even": {
				"code": "numericality: { even: true }",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#numericality"
			},
			"odd": {
				"code": "numericality: { odd: true }",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#numericality"
			},
			"greater-than": {
				"code": "numericality: { greater_than: 3 }\nnumericality: { greater_than_or_equal_to: 4 }",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#numericality"
			},
			"less-than": {
				"code": "numericality: { less_than: 12 }\nnumericality: { less_than_or_equal_to: 11 }",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#numericality"
			},
			"equals-value": {
				"code": "numericality: { equal_to: mynum }",
				"api": "numericality: { greater_than: 3 }\nnumericality: { greater_than_or_equal_to: 4 }"
			},
			"in-list": {
				"code": "inclusion: { in: %w(item1 item2 item3), message: 'This is the error message' }",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#inclusion"
			},
			"not-in-list": {
				"code": "exclusion: { in: %w(item1 item2 item3), message: 'This is the error message' }",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#exclusion"
			},
			"accepted": {
				"code": "acceptance: true",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#acceptance"
			},
			"confirmed": {
				"code": "confirmation: true",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#confirmation"
			},
			"not-exists-in-database": {
				"code": "uniqueness: true",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#uniqueness"
			},
			"validate-associated": {
				"code": "validates_associated :books",
				"api": "http://guides.rubyonrails.org/active_record_validations.html#validates-associated"
			}
		},
		"mvc": {
			"route": {
				"code": [
					{
						"file": "config/routes.rb",
						"contents": "get '/product/:num', to: 'catalog#product_lookup'"
					}
				],
				"api": "http://guides.rubyonrails.org/routing.html"
			},
			"controller-action": {
				"code": "class SampleController < ApplicationController\n    def myaction\n    end\nend",
				"api": "http://guides.rubyonrails.org/action_controller_overview.html#methods-and-actions"
			},
			"render-view": {
				"code": "@variable_for_view = 27\nrender 'viewname'\n# if render not called, view with same name as action is rendered by default",
				"api": "http://guides.rubyonrails.org/layouts_and_rendering.html"
			},
			"url": {
				"code": "action('MyController@myAction', $params);\nroute('routename', $params);",
				"api": "http://laravel.com/docs/helpers#urls"
			},
			"output-form-element": {
				"code": "<%= form_for :mymodel do |f|\n    <%= f.text_area :myfield %>\n<% end %>",
				"api": "http://guides.rubyonrails.org/getting_started.html#the-first-form"
			},
			"log": {
				"code": "logger.info 'hello, log!'",
				"api": "http://mikenaberezny.com/2007/02/24/rails-logging-tips/"
			}
		}
	}
}